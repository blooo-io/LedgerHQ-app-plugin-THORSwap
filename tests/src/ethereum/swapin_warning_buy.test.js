import { processTest, populateTransaction } from "../test.fixture";

const contractName = "TSLedgerAdapter";  // <= Name of the smart contract

const testLabel = "ethereum_swapin_warning_buy"; // <= Name of the test
const testDirSuffix = "swapin_warning_buy"; // <= directory to compare device snapshots to
const testNetwork = "ethereum";
const signedPlugin = false;

const contractAddr = "0xb81c7c2d2d078205d7fa515ddb2dea3d896f4016";   // <= Address of the smart contract
const chainID = 1;

// Modified buyAsset from the following transaction: https://etherscan.io/tx/0x20e72cf73d9fefa92f7af8d263c7abbbdd81f65a3459d583003840fa11c6aab3
// buyAsset is "ETH.." instead of "THOR.RUNE.8" (should never happen, testing input error handling behaviour)
const inputData = "0x4a95961e0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000240000000000000000000000000000000000000000000000000016345785d8a00000000000000000000000000000000000000000000000000000000000000000280000000000000000000000000000000000000000000000000000000007280224000000000000000000000000000000000000000000000000000000000705ad14000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000001993ccb49c327060337f0d55d63fc1fdafa6a41f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016345785d8a000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000654f4a84000000000000000000000000000000000000000000000000000000000000000d3d3a723a746573743a3a743a3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d3d3a723a746573743a3a743a300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000074554482e4554480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000054554482e2e000000000000000000000000000000000000000000000000000000";

// Create serializedTx and remove the "0x" prefix
const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
    {
        name: "nanos",
        label: "Nano S",
        steps: 7, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanox",
        label: "Nano X",
        steps: 7, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanosp",
        label: "Nano S+",
        steps: 7, // <= Define the number of steps for this test case and this device
    }
];

devices.forEach((device) =>
    processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx, testNetwork)
);
